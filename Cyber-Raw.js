let parameters = {
    format: 'CSV',
    table_name: 'cybr_lbl_dectbl1',
    table_description: "Arvore de decisao para qualificar creditos.",
    developer: ['paulo_eduardo_piccoli_ext@carrefour.com', 'guilherme_barros_alves_pereira_ext@carrefour.com'],
    pec: 3,
    custom_tags: ['PIT0003'],
    pec_obs: 'PIT 0003 - CYBER',
    field_delimiter: '|',
    skip_leading_rows: 1,
    allow_jagged_rows: true,
	ignore_unknown_values: true,
    partition_by: {column: 'ingestion_timestamp', type: 'timestamp', granularity: 'day'},
    cluster_by: ["ingestion_ref_date"],
    declare_source_table: false,

    data_governance: [
		{name: "schedule_name", value: "cybr_lbl_dectbl1"},
		{name: "data_classification", value: "Internal"},
		{name: "partitioned_table", value: "true"},
		{name: "clustered_table", value: "true"},
		{name: "update_frequency", value: "Daily"},
		{name: "load_type", value: "Incremental"},
		{name: "data_retention", value: "Not Applicable"}],
    
    columns: [ 
        {name: 'dh_ref', type: 'NUMERIC'},                                     
        {name: 'in_oper', type: 'STRING'},   
        {name: 'serial', type: 'NUMERIC'},    
        {name: 'acct_grp', type: 'STRING'},    
        {name: 'level1', type: 'NUMERIC'},   
        {name: 'test', type: 'NUMERIC'},    
        {name: 'sequence', type: 'NUMERIC'},    
        {name: 'next_level', type: 'NUMERIC'},   
        {name: 'comment1', type: 'STRING'},   
        {name: 'op', type: 'STRING'},    
        {name: 'field_1', type: 'STRING'},   
        {name: 'field_2', type: 'STRING'},   
        {name: 'field_2_flag', type: 'STRING'},    
        {name: 'field_3', type: 'STRING'},   
        {name: 'field_3_flag', type: 'STRING'},    
        {name: 'or_flag', type: 'STRING'},   
        {name: 'num_return', type: 'NUMERIC'},    
        {name: 'nxt_return', type: 'NUMERIC'},   
        {name: 'queue', type: 'STRING'},    
    ],  

    columns_description : {
        dh_ref: 'Data em que a alteracao do registro ocorreu no Cyber',
        in_oper: 'Indicador da alteracao realizada no registro ("I" = Inclusao, "A" = Alteracao, "E" = Exclusao)',
        serial: 'Ordem que deve ser seguida para gravar os dados na ods.',
        acct_grp: 'Codigo do Grupo da Conta Parte da "Primary Key" (logica) da tabela.',
        level1: 'Nivel para esta prova. Parte da "Primary Key" (logica) da tabela.',
        test: 'Numero de provas dentro de um nivel. Parte da "Primary Key" (logica) da tabela.',
        sequence: 'Numero sequencial dentro de uma prova. Parte da "Primary Key" (logica) da tabela.',
        next_level: 'Nivel ao que se avanca se a prova e verdadeiro.',
        comment1: 'Comentario da prova (so para sequence = 0).',
        op: 'Operador de comparacao (so para sequence = 1 a 999). Os operadores validos sao: .eo. Igual a dv1 ou igual a dv2. Exemplo: c = dv1 ou c = dv2. .eq. Igual a. Exemplo: c = dv1. .ge. Maior ou igual a. Exemplo: c >= dv1. .gt. Maior a. Exemplo: c > dv1. .le. Menor ou igual a. Exemplo: c <= dv1. .lt. Menor a. Exemplo: c < dv1. .ne. Diferente de. Exemplo: c!= dv1. .no. Diferente a e diferente a. Exemplo: c!= dv1 e c!= dv2. .os. Menor a ou Maior a. Exemplo: c < dv1 ou c > dv2. .we. Maior ou igual a e Menor ou igual a (faixa de valores). Ex.: c >= dv1 e c <= dv2.',
        field_1: 'Campo mestre que se compara usando o operador.',
        field_2: 'Um dos campos a comparar.',
        field_2_flag: 'Indica se o dado 2 e um campo ou um valor.',
        field_3: 'Um dos campos a comparar.',
        field_3_flag: 'Indica se o dado 3 e um campo ou um valor.',
        or_flag: 'Bandeira usada para agrupar varias comparacoes. So tem dois possiveis valores: branco = indica que nao se agrupam as comparacoes. 0 = indica que as comparacoes se agrupam.',
        num_return: 'Numero de valores regressados (so para sequence = 0).',
        nxt_return: 'RESERVADO.',
        queue: 'Valores de regresso (para sequence = 10000 a 32767).'
    },
    
}
csf_modules.ingestion.ingest(parameters)	
